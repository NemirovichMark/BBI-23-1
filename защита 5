using System;
namespace lab5
{
    class Program
    {
        static void Main()
        {
            // #region 5
            // Console.WriteLine("№5");
            // double [,] m1 = new double[4, 6] { { 1, 1, 1, 11, 1, 1 }, { 2, 2, 2, 2, 2, 2 }, { 3, 3, 3, 3, 3, 3 }, { 4, 4, 4, 4, 4, 4 } };
            // double [,] m2 = new double [6, 6] { { 5, 5, 5, 5, 5, 5 }, { 6, 6, 6, 6, 6, 6 }, { 7, 7, 7, 7, 7, 7 }, { 0, 0, 0, 0, 0, 0 }, { -1, -1, -1, -1, -1, -1 }, { 9, 9, 9, 9, 9, 9 } };
            // // int n;
            // Console.WriteLine("Матрица А:");
            // Console.WriteLine();
            // print(m1);
            // Console.WriteLine("Матрица В:");
            // Console.WriteLine();
            // print(m2);
            // Console.Write("Индекс столбца, в котором ищем максимальный эл-т: ");
            // n = int.Parse(Console.ReadLine());
            // int i1, i2;
            // i1 = pm(m1, n);
            // i2 = pm(m2, n);
            // for (int i = 0; i < m1.GetLength(1); i++)
            // {
            //     double x = m1[i1, i];
            //     m1[i1, i] = m2[i2, i];
            //     m2[i2, i] = x;
            // }
            // Console.WriteLine("--->");
            // Console.WriteLine("Матрица А:");
            // Console.WriteLine();
            // print(m1);
            // Console.WriteLine("Матрица В:");
            // Console.WriteLine();
            // print(m2);
            // #endregion
            // #region 11
            // Console.WriteLine("№11");
            // int n1,n2,n3,n4;
            // int i3,i4;
            // define(out n1, out n2, out n3, out n4, out m1, out m2);
            // find_imax(m1, out i1, out i2);
            // find_imax(m2, out i3, out i4);
            // double p=m1[i1,i2];
            // m1[i1,i2]=m2[i3,i4];
            // m2[i3,i4]=p;
            // Console.WriteLine("--->");
            // Console.WriteLine("Матрица А:");
            // Console.WriteLine();
            // print(m1);
            // Console.WriteLine("Матрица В:");
            // Console.WriteLine();
            // print(m2);
            // #endregion
            #region 17
            int n1,n2,n3,n4;
            double [,] m1;
            double [,] m2;
            Console.WriteLine("№17");
            define(out n1, out n2, out n3, out n4, out m1, out m2);
            double [] s1= new double [m1.GetLength(0)];
            for (int i=0; i<m1.GetLength(0);i++)
            {
                s1[i]=find_amax(m1, i);
            }
            double [] s2= new double [m2.GetLength(0)];
            for (int i=0; i<m2.GetLength(0);i++)
            {
                s2[i]=find_amax(m2, i);
            }
            sort(ref m1, ref s1,0,s1.GetLength(0)-1);
            sort(ref m2,ref s2,0,s2.GetLength(0)-1);
            Console.WriteLine("--->");
            Console.WriteLine("Матрица А:");
            Console.WriteLine();
            print(m1);
            Console.WriteLine("Матрица В:");
            Console.WriteLine();
            print(m2);
            #endregion
            // #region 23
            // Console.WriteLine("№23");
            // define(out n1, out n2, out n3, out n4, out m1, out m2);
            // if (((n1*n2)>=5) & ((n3*n4)>=5))
            // {
            //     change(ref m1);
            //     change(ref m2);
            //     Console.WriteLine("--->");
            //     Console.WriteLine("Матрица А:");
            //     Console.WriteLine();
            //     print(m1);
            //     Console.WriteLine("Матрица В:");
            //     Console.WriteLine();
            //     print(m2);
            // }
            // else Console.WriteLine("Ошибка: в одной из матриц меньше 5 элементов");
            // #endregion
        }
        static int pm(double[,] a, int b)
        {
            int imax = 0;
            for (int i = 1; i < a.GetLength(0); i++)
            {
                if (a[i, b] > a[imax, b]) imax = i;
            }
            return imax;
        }
        static void print(double[,] q)
        {
            for (int i = 0; i < q.GetLength(0); i++)
            {
                for (int j = 0; j < q.GetLength(1); j++)
                {
                    Console.Write("{0} ", q[i, j]);
                }
                Console.WriteLine();
            }
        }
        static void define(out int n1, out int n2, out int n3,out int n4, out double [,] m1, out double [,] m2)
        {
            Console.Write("Введите размерность матрицы А: ");
            string [] s1=Console.ReadLine().Split();
            n1= int.Parse(s1[0]); n2= int.Parse(s1[1]);
            Console.Write("Введите размерность матрицы B: ");
            string [] s2=Console.ReadLine().Split();
            n3= int.Parse(s2[0]); n4= int.Parse(s2[1]);
            m1=new double [n1,n2]; m2=new double [n3,n4];
            Console.WriteLine("Введите элементы матрицы А: ");
            for (int i = 0; i < n1; i++)
            {
                string[] s=Console.ReadLine().Split(' ');
                for (int j = 0; j < n2; j++)
                {
                    m1[i, j]=double.Parse(s[j]);
                }
            }
            Console.WriteLine("Введите элементы матрицы В: ");
            for (int i = 0; i < n3; i++)
            {
                string[] s=Console.ReadLine().Split();
                for (int j = 0; j < n4; j++)
                {
                    m2[i, j]=double.Parse(s[j]);
                }
            }
        }
        static double find_amax(double [,] m, int i1)
        {
            int i2=0;
            for (int i=0;i<m.GetLength(1);i++)
            {
                if (m[i1,i]>m[i1,i2]) i2=i;
            }
            return m[i1,i2];
        }
        static void sort(ref double [,] m, ref double [] s, int n1, int n2)
        {
            if (n1<n2)
            {
                int n3=n1; int n4=n2;
                double x=s[(n3+n4)/2];
                while (n3<=n4)
                {
                    while (s[n3]>x && (n3+1)<s.GetLength(0)) n3++;
                    while (s[n4]<x && (n4>0)) n4--;
                    if (n3<n4)
                    {
                        double y=s[n3];
                        s[n3]=s[n4];
                        s[n4]=y;
                        for (int j=0;j<m.GetLength(1);j++)
                        {
                            double h=m[n3,j];
                            m[n3,j]=m[n4,j];
                            m[n4,j]=h;
                        }
                        n3++;
                        n4--;
                    }
                }
                sort (ref m, ref s, n1, n4);
                sort ( ref m, ref s,  n3,  n2);
            }
        }
    }
}
